#!/usr/bin/env bash

set -u

#%include search-help.sh

#%include autohelp.sh out.sh debug.sh bincheck.sh

#%include searchers.sh

autohelp:check "$@"

DOUPDATE=no
DEBUGMODE=no
ARGS=()
ARG1=
FILTER=.
: "${EXCLUDED_MANAGERS=}"
PAFS_PAGER=(less -R)

while [[ -n "$@" ]]; do
    ARG="$1" ; shift
    case "$ARG" in
    -u|--update)
        DOUPDATE=yes
        ;;
    --debug)
        debug:mode output
        ;;
    -f|--filter)
        FILTER="$(echo $1|sed -r "s/[\"']//g")" ; shift
        ;;
    -h|--help)
        printhelp
        exit 0
        ;;
    -e=*)
        register_exclusions "${ARG#*=}"
        ;;
    --dump|-d)
        PAFS_PAGER=(cat)
        ;;
    *)
        ARGS+=("$ARG")
        ;;
    esac
done

ARG1="${ARGS[@]}"
debug:print "ARG1=$ARG1"

if [[ -z "$ARGS" ]]; then
    out:fail "You must supply at least one package name to search."
fi

#SFILE="/tmp/searchfile_$(date "+%F%T"|md5sum|cut -d' ' -f1)"
SFILE="$(mktemp)" || out:fail "Cannot create temp file"

if is_not_excluded os; then
    if trypkg paf; then # support our own wrapper :-)
        doupdate paf -u
        searchit paf paf "$ARGS"

    elif trypkg apt-cache; then
        doupdate apt-get update
        searchit APT apt-cache search "$ARGS"

    elif trypkg dnf; then
        searchit dnf dnf search "$ARGS"
        searchit dnfgroup dnf groupsearch "$ARGS"

    elif trypkg yum; then
        searchit yum yum search "$ARGS"
        searchit yumgroup yum groupsearch "$ARGS"

    elif trypkg zypper; then
        searchit zypper zypper search "$ARGS"

    elif trypkg yaourt; then
        doupdate yaourt -Sy
        searchit yaourt yaourt -Qs "$ARGS"

    elif trypkg pacman; then
        doupdate pacman -Sy
        searchit pacman pacman -Qs "$ARGS"

    elif trypkg emerge; then
        doupdate emerge sync
        searchit emerge emerge -s "$ARG1"

    elif trypkg tazpkg; then
        doupdate tazpkg recharge
        searchit tazpkg tazpkg search "$ARG1"
    fi
fi

# do these need explicit updates?
trypkg pip && searchit pip pip search "$ARGS"
trypkg gem && searchit gem gem search "$ARGS"
trypkg npm && searchit npm npm search "$ARGS"
trypkg docpan && searchit cpan docpan "$ARG1"
trypkg pear && searchit pear pear search "$ARGS"
trypkg cargo && searchit cargo cargo search "$ARGS"

# ================
# some more outlandish searches

if trypkg docker; then
    searchit Docker docker search "$ARG1"
fi

if bincheck:has elinks; then
    URLARG1="$(python -c "import urllib as u; print(u.quote('$ARG1'))")"
    # ---- Github
    is_not_excluded github && \
        searchit github searchweb "github%20$URLARG1" "https://github.com/[a-zA-Z0-9_.-]+/[a-zA-Z0-9._-]+"
else
    out:warn "'elinks' is required for searching the web"
fi

# ===============
# Local builds
if is_not_excluded local; then
    searchit "Local buildables" findpkg 'Makefile|install\.sh'

    # package maangement locally

    if trypkg dpkg yum dnf; then
        searchit "Local RPM files" findpkg ".rpm"

    elif trypkg dpkg; then
        searchit "Local deb files" findpkg ".deb"
    fi
fi

# ===========

"${PAFS_PAGER[@]}" "$SFILE"
rm "$SFILE"
