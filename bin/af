#! /bin/bash

set -uo pipefail

: ${ASSUMEYN=}
PACKAGELIST=
ACTION=
CLEANUP=
UPDATE=

if ! which apt-get 2>/dev/null >/dev/null; then
	if [[ ! "$@" =~ -r ]]; then
		echo "Command 'apt-get' not found."
		exit 1
	fi
fi

sname="$(basename $0)"

function printhelp {
	cat <<EOF

$sname - the 'af' script

A wrapper for \`apt-get\` and \`apt-cache\` to manage packages more lazily (from a typing perspective!)

The tool uses sudo to run actions that require root.

Usage

	$sname [ACTION] TERMS ... [OPTIONS]

ACTION does not need to be specified at the start -- the last set action determines which action will be exectured. The following sequence of commands is thus valid

	> $sname htop
	> $sname htop -s
	> $sname htop -s vim tmux -i

In turn, the commands search for htop ; display information about htop ; and install htop and other packages. In the last command "-s" is ignored in favour of "-i", to avoid having to retype commands when dealing with a lot of packages.

ACTIONS

-l|--list
	List installed packages, uses \`less\` pager.

-s|--show
	Show details of packages, uses \`less\`pager.

-i|--install
	Install specified packages.

-r|remove
	Remove specified packages

-p|--purge
	Purge specified packages - removes both the packages an configuration files

-g|--upgrade
	Upgrade all packages on the system within the same release.

-R|--release-upgrade
	Do a release upgrade.

OPTIONS

-y|--yes|--assume-yes
	Use the --assume-yes flag for operations which would normally prompt you.

-n|--no|--assume-no
	Use the --assume-no flag for operations which would normally prompt you.

--do-not-assume
	Do not assume yes or no.

-u|--update
	Run an update of package listings.
	Can be specified without actions, or used with other actions.

-nu|--no-update
	Don't run an update of package listings.
	Supercedes a previously set '-u' option.

-c|--cleanup
	Perform an autoclean and autoremove.

-nc|--no-cleanup
	Donot perform any autoclean or autoremove
	Supercedes a previously set '-c' option.

ACTION WARNINGS

You can place a warning file name 'warn-\$WARNINGNAME' for certain actions in /etc/alpacka to display a warning before running a given action.

Supported warning names are: install, remove, upgrade,  purge, cleanup

For example, to print a warning before an upgrade is run, add a file called '/etc/alpacka/warn-upgrade' containing the warning message to display.

ENVIRONMENT VARIABLES

ASSUMEYN
	You can set this variable to either "-y" or "-n" to force the defaut behaviour
	to be to assume yes or assume no, respectively.

	This may be useful to have in an environment where you do not want APT's
	behaviour of assuming you wanted to proceed even if you wanted to be prompted. [1]

References:

[1] http://unix.stackexchange.com/a/164494
	"Force apt-get prompt yes/no" (not possible)
EOF
}

# Echoes 'yes' on any confirmation, no in all other cases
function areyousure {
	read -p "$@ y/N> "
	yespat='^y|Y|yes|YES|aye$'
	if [[ "$REPLY" =~ $yespat ]]; then
		echo "yes"
	else
		echo "no"
	fi
}

function printwarning {
	local warningfile="/etc/alpacka/warn-$1"; shift

	if [[ -f "$warningfile" ]]; then
		echo -n -e "\033[33;1m"
		cat "$warningfile"
		echo -n -e "\033[0m"
	fi
	sleep 2
}

while [[ -n "$@" ]]; do
	ARG="$1" ; shift
	case "$ARG" in
# ACTIONS
	-l|--list)
		ACTION=list
		;;
	-i|--install)
		ACTION=install
		;;
	-r|--remove)
		ACTION=remove
		;;
	-p|--purge)
		ACTION=purge
		;;
	-s|--show)
		ACTION=show
		;;
	-g|--upgrade)
		ACTION=upgrade
		;;
	-gg|--dist-upgrade)
		ACTION=dist-upgrade
		;;
	-R|--release-upgrade)
		ACTION=uprelease
		;;
# MODES
	-y|--yes|--assume-yes)
		ASSUMEYN=-y
		;;
	-n|--no|--assume-no)
		ASSUMEYN=--assume-no
		;;
	--do-not-assume)
		ASSUMEYN=
		;;
	-c|--cleanup)
		CLEANUP=yes
		;;
	-nc|--no-cleanup)
		CLEANUP=no
		;;
	-u|--update)
		UPDATE=yes
		;;
	-nu|--no-update)
		UPDATE=no
		;;
	--help)
		printhelp
		exit 0
		;;
	*)
		PACKAGELIST="$PACKAGELIST $ARG"
		;;
	esac
done

if [[ $UPDATE = yes ]]; then
	sudo apt-get update
fi


if [[ $ACTION = install ]]; then
	printwarning install

	[[ -n "$PACKAGELIST" ]] && sudo apt-get install --show-progress $PACKAGELIST $ASSUMEYN

elif [[ $ACTION = remove ]]; then
	printwarning remove

	[[ -n "$PACKAGELIST" ]] && sudo apt-get remove --show-progress $PACKAGELIST $ASSUMEYN

elif [[ $ACTION = purge ]]; then
	printwarning purge

	[[ -n "$PACKAGELIST" ]] && sudo apt-get purge $PACKAGELIST $ASSUMEYN

elif [[ $ACTION = upgrade ]]; then
	printwarning upgrade

	if [[ -n "$PACKAGELIST" ]] && [[ "$ASSUMEYN" != '-y' ]]; then
		sudo apt-get install --show-progress $PACKAGELIST $ASSUMEYN
	else
		sudo apt-get dist-upgrade --show-progress $ASSUMEYN
	fi

elif [[ $ACTION = dist-upgrade ]]; then
	printwarning upgrade

	sudo apt-get dist-upgrade $ASSUMEYN

elif [[ $ACTION = uprelease ]]; then
	printwarning releaseupgrade

	which "do-release-upgrade" >/dev/null 2>&1 || "$0" --install update-manager-core $ASSUMEYN
	sudo "do-release-upgrade" $ASSUMEYN

elif [[ $ACTION = list ]]; then
	dpkg -l | less

elif [[ $ACTION = show ]]; then
	[[ -n "$PACKAGELIST" ]] && apt-cache show $PACKAGELIST | sed -r 's/^(Package: )/[1;33m===[0m\n\1/' | less -R

elif [[ -z "$ACTION" ]]; then
	[[ -n "$PACKAGELIST" ]] && apt-cache search $PACKAGELIST | less

fi

if [[ $CLEANUP = yes ]]; then
	printwarning cleanup

	sudo apt-get autoremove $ASSUMEYN
	sudo apt-get autoclean $ASSUMEYN
fi
